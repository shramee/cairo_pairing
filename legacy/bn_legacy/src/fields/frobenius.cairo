mod fp {
    // NONRESIDUE, β = -1 = (FIELD - 1)
    const NONRESIDUE_C0: u256 =
        21888242871839275222246405745257275088696311157297823662689037894645226208583;
}

mod fp2 {
    // NONRESIDUE, ξ = 9+U
    const NONRESIDUE_C0: u256 = 9;
    const NONRESIDUE_C1: u256 = 1;
}

mod fp6 {
    // FQ6 Frobenius coefficients
    // https://github.com/arkworks-rs/algebra/blob/master/curves/bn254/src/fields/fq6.rs

    // Fp2::NONRESIDUE^(((q^0) - 1) / 3)
    const Q_0_C0: u256 = 1;
    const Q_0_C1: u256 = 0;

    // Fp2::NONRESIDUE^(((q^1) - 1) / 3)
    const Q_1_C0: u256 =
        21575463638280843010398324269430826099269044274347216827212613867836435027261;
    const Q_1_C1: u256 =
        10307601595873709700152284273816112264069230130616436755625194854815875713954;

    // Fp2::NONRESIDUE^(((q^2) - 1) / 3)
    const Q_2_C0: u256 =
        21888242871839275220042445260109153167277707414472061641714758635765020556616;
    const Q_2_C1: u256 = 0;

    // Fp2::NONRESIDUE^(((q^3) - 1) / 3)
    const Q_3_C0: u256 =
        3772000881919853776433695186713858239009073593817195771773381919316419345261;
    const Q_3_C1: u256 =
        2236595495967245188281701248203181795121068902605861227855261137820944008926;

    // Fp2::NONRESIDUE^(((q^4) - 1) / 3)
    const Q_4_C0: u256 = 2203960485148121921418603742825762020974279258880205651966;
    const Q_4_C1: u256 = 0;

    // Fp2::NONRESIDUE^(((q^5) - 1) / 3)
    const Q_5_C0: u256 =
        18429021223477853657660792034369865839114504446431234726392080002137598044644;
    const Q_5_C1: u256 =
        9344045779998320333812420223237981029506012124075525679208581902008406485703;

    // Fp2::NONRESIDUE^((2*(q^0) - 2) / 3)
    const Q2_0_C0: u256 = 1;
    const Q2_0_C1: u256 = 0;

    // Fp2::NONRESIDUE^((2*(q^1) - 2) / 3)
    const Q2_1_C0: u256 =
        2581911344467009335267311115468803099551665605076196740867805258568234346338;
    const Q2_1_C1: u256 =
        19937756971775647987995932169929341994314640652964949448313374472400716661030;

    // Fp2::NONRESIDUE^((2*(q^2) - 2) / 3)
    const Q2_2_C0: u256 = 2203960485148121921418603742825762020974279258880205651966;
    const Q2_2_C1: u256 = 0;

    // Fp2::NONRESIDUE^((2*(q^3) - 2) / 3)
    const Q2_3_C0: u256 =
        5324479202449903542726783395506214481928257762400643279780343368557297135718;
    const Q2_3_C1: u256 =
        16208900380737693084919495127334387981393726419856888799917914180988844123039;

    // Fp2::NONRESIDUE^((2*(q^4) - 2) / 3)
    const Q2_4_C0: u256 =
        21888242871839275220042445260109153167277707414472061641714758635765020556616;
    const Q2_4_C1: u256 = 0;

    // Fp2::NONRESIDUE^((2*(q^5) - 2) / 3)
    const Q2_5_C0: u256 =
        13981852324922362344252311234282257507216387789820983642040889267519694726527;
    const Q2_5_C1: u256 =
        7629828391165209371577384193250820201684255241773809077146787135900891633097;
}

mod fp12 {
    // FQ12 Frobenius coefficients
    // https://github.com/arkworks-rs/algebra/blob/master/curves/bn254/src/fields/fq12.rs

    // Fp2::NONRESIDUE^(((q^0) - 1) / 6)
    const Q_0_C0: u256 = 1;
    const Q_0_C1: u256 = 0;

    // Fp2::NONRESIDUE^(((q^1) - 1) / 6)
    const Q_1_C0: u256 =
        8376118865763821496583973867626364092589906065868298776909617916018768340080;
    const Q_1_C1: u256 =
        16469823323077808223889137241176536799009286646108169935659301613961712198316;

    // Fp2::NONRESIDUE^(((q^2) - 1) / 6)
    const Q_2_C0: u256 =
        21888242871839275220042445260109153167277707414472061641714758635765020556617;
    const Q_2_C1: u256 = 0;

    // Fp2::NONRESIDUE^(((q^3) - 1) / 6)
    const Q_3_C0: u256 =
        11697423496358154304825782922584725312912383441159505038794027105778954184319;
    const Q_3_C1: u256 =
        303847389135065887422783454877609941456349188919719272345083954437860409601;

    // Fp2::NONRESIDUE^(((q^4) - 1) / 6)
    const Q_4_C0: u256 =
        21888242871839275220042445260109153167277707414472061641714758635765020556616;
    const Q_4_C1: u256 = 0;

    // Fp2::NONRESIDUE^(((q^5) - 1) / 6)
    const Q_5_C0: u256 =
        3321304630594332808241809054958361220322477375291206261884409189760185844239;
    const Q_5_C1: u256 =
        5722266937896532885780051958958348231143373700109372999374820235121374419868;

    // Fp2::NONRESIDUE^(((q^6) - 1) / 6)
    const Q_6_C0: u256 =
        21888242871839275222246405745257275088696311157297823662689037894645226208582; // - 1;
    const Q_6_C1: u256 = 0;

    // Fp2::NONRESIDUE^(((q^7) - 1) / 6)
    const Q_7_C0: u256 =
        13512124006075453725662431877630910996106405091429524885779419978626457868503;
    const Q_7_C1: u256 =
        5418419548761466998357268504080738289687024511189653727029736280683514010267;

    // Fp2::NONRESIDUE^(((q^8) - 1) / 6)
    const Q_8_C0: u256 = 2203960485148121921418603742825762020974279258880205651966;
    const Q_8_C1: u256 = 0;

    // Fp2::NONRESIDUE^(((q^9) - 1) / 6)
    const Q_9_C0: u256 =
        10190819375481120917420622822672549775783927716138318623895010788866272024264;
    const Q_9_C1: u256 =
        21584395482704209334823622290379665147239961968378104390343953940207365798982;

    // Fp2::NONRESIDUE^(((q^10) - 1) / 6)
    const Q_10_C0: u256 = 2203960485148121921418603742825762020974279258880205651967;
    const Q_10_C1: u256 = 0;

    // Fp2::NONRESIDUE^(((q^11) - 1) / 6)
    const Q_11_C0: u256 =
        18566938241244942414004596690298913868373833782006617400804628704885040364344;
    const Q_11_C1: u256 =
        16165975933942742336466353786298926857552937457188450663314217659523851788715;
}

mod pi {
    // π (Pi) - Untwist-Frobenius-Twist Endomorphisms on twisted curves
    // -----------------------------------------------------------------
    // BN254_Snarks is a D-Twist: pi1_coef1 = ξ^((p-1)/6)
    // https://github.com/mratsim/constantine/blob/976c8bb215a3f0b21ce3d05f894eb506072a6285/constantine/math/constants/bn254_snarks_frobenius.nim#L131
    // In the link above this is referred to as ψ (Psi)

    // pi2_coef3 is always -1 (mod p^m) with m = embdeg/twdeg
    // Recap, with ξ (xi) the sextic non-residue for D-Twist or 1/SNR for M-Twist
    // pi_2 ≡ ξ^((p-1)/6)^2 ≡ ξ^(2(p-1)/6) ≡ ξ^((p-1)/3)
    // pi_3 ≡ pi_2 * ξ^((p-1)/6) ≡ ξ^((p-1)/3) * ξ^((p-1)/6) ≡ ξ^((p-1)/2)

    // -----------------------------------------------------------------
    // for πₚ mapping

    // Fp2::NONRESIDUE^(2((q^1) - 1) / 6)
    const Q1X2_C0: u256 =
        21575463638280843010398324269430826099269044274347216827212613867836435027261;
    const Q1X2_C1: u256 =
        10307601595873709700152284273816112264069230130616436755625194854815875713954;

    // Fp2::NONRESIDUE^(3((q^1) - 1) / 6)
    const Q1X3_C0: u256 =
        2821565182194536844548159561693502659359617185244120367078079554186484126554;
    const Q1X3_C1: u256 =
        3505843767911556378687030309984248845540243509899259641013678093033130930403;

    // -----------------------------------------------------------------
    // for π² mapping

    // Fp2::NONRESIDUE^(2(p^2-1)/6)
    const Q2X2_C0: u256 = 0x30644e72e131a0295e6dd9e7e0acccb0c28f069fbb966e3de4bd44e5607cfd48;
    const Q2X2_C1: u256 = 0x0;
    // Fp2::NONRESIDUE^(3(p^2-1)/6)
    const Q2X3_C0: u256 = 0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd46;
    const Q2X3_C1: u256 = 0x0;
}
